package br.com.codiub.enderecos.resource;

import java.util.Optional;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import br.com.codiub.enderecos.entity.Logradouros;
import br.com.codiub.enderecos.filter.LogradourosFilter;
import br.com.codiub.enderecos.repository.LogradourosRepository;
import br.com.codiub.enderecos.service.LogradourosService;

@RestController
@RequestMapping("/logradouros")
public class LogradourosResource {

  @Autowired private LogradourosRepository logradourosRepository;

  @Autowired private LogradourosService logradourosService;

  @PostMapping
  public ResponseEntity<Logradouros> criar(
      @RequestBody Logradouros logradouros, HttpServletResponse response) {
    Logradouros logradourosSalva = logradourosRepository.save(logradouros);
    return ResponseEntity.status(HttpStatus.CREATED).body(logradourosSalva);
  }

  @GetMapping("/{codigo}")
  public ResponseEntity<Logradouros> buscarPeloCodigo(@PathVariable Long codigo) {
    Optional<Logradouros> logradouros = logradourosRepository.findById(codigo);
    return logradouros != null
        ? ResponseEntity.ok(logradouros.get())
        : ResponseEntity.notFound().build();
  }

  @DeleteMapping("/{codigo}")
  @ResponseStatus(HttpStatus.NO_CONTENT)
  public void remover(@PathVariable Long codigo) {
    logradourosRepository.deleteById(codigo);
  }

  @PutMapping("/{codigo}")
  public ResponseEntity<Logradouros> atualizar(
      @PathVariable Long codigo, @Validated @RequestBody Logradouros logradouros) {
    Logradouros logradourosSalva = logradourosService.atualizar(codigo, logradouros);
    return ResponseEntity.ok(logradourosSalva);
  }

  @GetMapping
  public Page<Logradouros> pesquisar(LogradourosFilter logradourosFilter, Pageable pageable) {
    return logradourosRepository.filtrar(logradourosFilter, pageable);
  }
}
