package br.com.codiub.enderecos.resource;

import java.util.Optional;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import br.com.codiub.enderecos.entity.Bairros;
import br.com.codiub.enderecos.filter.BairrosFilter;
import br.com.codiub.enderecos.input.BairrosInput;
import br.com.codiub.enderecos.repository.BairrosRepository;
import br.com.codiub.enderecos.service.BairrosService;

@RestController
@RequestMapping("/bairros")
public class BairrosResource {

  @Autowired private BairrosRepository bairrosRepository;
  @Autowired private BairrosService bairrosService;

  @PostMapping
  public ResponseEntity<Bairros> criar(@RequestBody Bairros bairros, HttpServletResponse response) {
    Bairros bairrosSalva = bairrosRepository.save(bairros);
    return ResponseEntity.status(HttpStatus.CREATED).body(bairrosSalva);
  }

  //Adamis 24022021
  @PostMapping("/completo")
  public ResponseEntity<Object> criar(@RequestBody BairrosInput bairrosInput, HttpServletResponse response) {
	  
	  ResponseEntity<Object> resp = bairrosService.save(bairrosInput);
	  return resp;
	  
  }
  

  @GetMapping("/{codigo}")
  public ResponseEntity<Bairros> buscarPeloCodigo(@PathVariable Long codigo) {
    Optional<Bairros> bairros = bairrosRepository.findById(codigo);
    return bairros != null ? ResponseEntity.ok(bairros.get()) : ResponseEntity.notFound().build();
  }

  @DeleteMapping("/{codigo}")
  @ResponseStatus(HttpStatus.NO_CONTENT)
  public void remover(@PathVariable Long codigo) {
    bairrosRepository.deleteById(codigo);
  }

  @PutMapping("/{codigo}")
  public ResponseEntity<Bairros> atualizar(
      @PathVariable Long codigo, @Validated @RequestBody Bairros bairros) {
    Bairros bairrosSalva = bairrosService.atualizar(codigo, bairros);
    return ResponseEntity.ok(bairrosSalva);
  }

  @GetMapping
  public Page<Bairros> pesquisar(BairrosFilter bairrosFilter, Pageable pageable) {
    return bairrosRepository.filtrar(bairrosFilter, pageable);
  }
}
